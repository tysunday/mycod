//Recur4.Описать рекурсивную функцию Fib1(N) целого типа, вычисляющую
//N - й элемент последовательности чисел Фибоначчи(N — целое число) :
//	F1 = F2 = 1, FK = FK−2 + FK−1, K = 3, 4, . . . .
//	С помощью этой функции найти пять чисел Фибоначчи с данными номерами, и вывести эти числа вместе с количеством рекурсивных вызовов
//	106 М.Э.Абрамян.Электронный задачник Programming Taskbook 4.5
//	функции Fib1, потребовавшихся для их нахождения.
//	Recur5.Описать рекурсивную функцию Fib2(N) целого типа, вычисляющую
//	N - й элемент последовательности чисел Фибоначчи(N — целое число) :
//	F1 = F2 = 1, FK = FK−2 + FK−1, K = 3, 4, . . . .
//	Считать, что номер N не превосходит 20. Для уменьшения количества рекурсивных вызовов по сравнению с функцией Fib1(см.задание Recur4)
//	создать вспомогательный массив для хранения уже вычисленных чисел
//	Фибоначчи и обращаться к нему при выполнении функции Fib2.С помощью функции Fib2 найти пять чисел Фибоначчи с данными номерами.

#include <iostream>
using namespace std;

int Fibonacci(int number, int &count)
{
	count++;
	if (number <= 1)
		return number;
	else
		return Fibonacci(number - 1, count) + Fibonacci(number - 2, count);
}

int main()
{
	setlocale(LC_ALL, "Russian");
	int number = 0, count = 0, result = 0;
	cout << "Введите число: \n";
	cin >> number;
	result = Fibonacci(number, count);
	cout << "Число Фибоначчи для " << number << ": " << result << endl;
	cout << "Число рекурсивных вызовов: " << count << endl;

}

